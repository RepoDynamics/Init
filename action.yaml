name: 'RepoDynamics Meta'
description: 'Load repository metadata.'
author: 'Armin Ariamajd'
branding:
  icon: file-text
  color: blue


inputs:
  detect-changes:
    description: |
      Whether to detect changes in the repository metadata.
    default: true
    required: false
  sync:
    description: |
      One of 'push', 'pull' or 'report' (default: report)
    default: report
    required: false


outputs:

  meta:
    description: "Repository metadata as a JSON string."
    value: ${{ steps.metadata.outputs.meta }}

  diff:
    description: "Repository metadata diff as a JSON string."
    value: ${{ steps.metadata.outputs.diff }}

  changes-detected:
    description: "Repository metadata as a JSON string."
    value: ${{ steps.commit.outputs.changes_detected }}

  commit-hash:
    description: "Repository metadata as a JSON string."
    value: ${{ steps.commit.outputs.commit_hash }}


runs:
  using: "composite"
  steps:

    - name: 'Initialize'
      shell: bash
      run: |
        # Initialize
        printf "\n\n$(cat ${{github.action_path}}/logo.txt)\n\n\n"

    - uses: actions/checkout@v3
      with:
        fetch-depth: ${{ (inputs.detect-changes == 'true' && 0) || 1 }}

    - name: 'Checkout Repository'
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        cache: 'pip'
        cache-dependency-path: '.github/workflows/requirements/**/*.txt'

    - name: 'Install RepoDynamics'
      shell: bash
      run: |
        # Install RepoDynamics
        echo "::group::Install RepoDynamics"
        python -m pip install -r .github/workflows/requirements/repodynamics.txt
        echo "::endgroup::"
        echo "::group::Display environment"
        python -m pip list
        echo "::endgroup::"

    - name: 'Detect Changes'
      if: inputs.detect-changes == 'true'
      id: changes-all
      # https://github.com/marketplace/actions/changed-files
      uses: tj-actions/changed-files@v37

    - name: 'Get changed categories'
      if: inputs.detect-changes == 'true'
      id: changes-groups
      uses: tj-actions/changed-files@v37
      with:
        files_yaml_from_source_file: ${{ github.action_path }}/changed_files.yaml

    - name: 'Collect Metadata'
      id: ext
      if: inputs.detect-changes != 'true' || steps.changes-groups.outputs.meta_any_modified == 'true'
      shell: bash
      env:
        RD_META_FILES__REPO: ${{ github.repository }}
        RD_META_FILES__REF: ${{ github.ref }}
      run: |
        # Collect Metadata
        rd-print "Collect Metadata" heading meta
        python -m repodynamics.actions meta files

    - if: |
        (inputs.detect-changes != 'true' || steps.changes-groups.outputs.meta_any_modified == 'true')
        && fromJSON(steps.ext.outputs.alt1).repo != ''
      uses: actions/checkout@v3
      with:
        repository: ${{ fromJSON(steps.ext.outputs.alt1).repo }}
        ref: ${{ fromJSON(steps.ext.outputs.alt1).ref }}
        sparse-checkout: ${{ fromJSON(steps.ext.outputs.alt1).path }}
        sparse-checkout-cone-mode: false
        path: ${{ fromJSON(steps.ext.outputs.alt1).path_dl }}
    - if: |
        (inputs.detect-changes != 'true' || steps.changes-groups.outputs.meta_any_modified == 'true')
        && fromJSON(steps.ext.outputs.alt1).repo != ''
      shell: bash
      run: |
        # Display Downloaded Files
        python -m repodynamics.actions meta files

    - if: |
        (inputs.detect-changes != 'true' || steps.changes-groups.outputs.meta_any_modified == 'true')
        && fromJSON(steps.ext.outputs.alt2).repo != ''
      uses: actions/checkout@v3
      with:
        repository: ${{ fromJSON(steps.ext.outputs.alt2).repo }}
        ref: ${{ fromJSON(steps.ext.outputs.alt2).ref }}
        sparse-checkout: ${{ fromJSON(steps.ext.outputs.alt2).path }}
        sparse-checkout-cone-mode: false
        path: ${{ fromJSON(steps.ext.outputs.alt2).path_dl }}
    - if: |
        (inputs.detect-changes != 'true' || steps.changes-groups.outputs.meta_any_modified == 'true')
        && fromJSON(steps.ext.outputs.alt2).repo != ''
      shell: bash
      run: |
        # Display Downloaded Files
        python -m repodynamics.actions meta files

    - if: |
        (inputs.detect-changes != 'true' || steps.changes-groups.outputs.meta_any_modified == 'true')
        && fromJSON(steps.ext.outputs.alt3).repo != ''
      uses: actions/checkout@v3
      with:
        repository: ${{ fromJSON(steps.ext.outputs.alt3).repo }}
        ref: ${{ fromJSON(steps.ext.outputs.alt3).ref }}
        sparse-checkout: ${{ fromJSON(steps.ext.outputs.alt3).path }}
        sparse-checkout-cone-mode: false
        path: ${{ fromJSON(steps.ext.outputs.alt3).path_dl }}
    - if: |
        (inputs.detect-changes != 'true' || steps.changes-groups.outputs.meta_any_modified == 'true')
        && fromJSON(steps.ext.outputs.alt3).repo != ''
      shell: bash
      run: |
        # Display Downloaded Files
        python -m repodynamics.actions meta files

    - name: 'Get metadata'
      if: |
        inputs.detect-changes != 'true' || steps.changes-groups.outputs.meta_any_modified == 'true'
      id: metadata
      env:
        RD_META__GITHUB_TOKEN: ${{ github.token }}
      shell: bash
      run: |
        # Get Metadata
        echo "::group::Install RepoDynamics Meta"
        python -m pip install -r .github/workflows/requirements/meta.txt
        echo "::endgroup::"
        rd-print "Calculate Metadata" heading meta
        python -m repodynamics.actions meta

    - name: 'Sync files'
      if: inputs.sync == 'push'
      # https://github.com/marketplace/actions/git-auto-commit
      uses: stefanzweifel/git-auto-commit-action@v4
      id: push
      with:
        commit_message: 'meta: sync dynamic files after metadata modification'
        commit_user_name: 'RepoDynamics-Meta[bot]'
        commit_user_email: 'action_meta@repodynamics.org'
        commit_author: 'RepoDynamics-Meta[bot] <action_meta@repodynamics.org>'

    - name: 'Pull'
      if: inputs.sync == 'pull'
      id: pull
      uses: peter-evans/create-pull-request@v5
      # https://github.com/marketplace/actions/create-pull-request
      with:
        commit-message: 'meta: sync dynamic files after metadata modification'
        committer: 'RepoDynamics-Meta[bot] <action_meta@repodynamics.org>'
        branch: 'meta/update'
        branch-suffix: timestamp
        title: 'meta: sync dynamic files after metadata modification'
        body-path: .local/repodynamics_meta/pr_body.md

    - name: 'Finalize'
      id: finalize
      shell: bash
      run: python -m repodynamics.actions meta finalize
      env:
        RD_META__DETECT: ${{ inputs.detect-changes }}
        RD_META__SYNC: ${{ inputs.sync }}
        RD_META__PUSH_CHANGES: ${{ steps.push.outputs.changes_detected }}
        RD_META__PUSH_SHA: ${{ steps.push.outputs.commit_hash }}
        RD_META__PULL_NUMBER: ${{ steps.pull.outputs.pull-request-number }}
        RD_META__PULL_URL: ${{ steps.pull.outputs.pull-request-url }}
        RD_META__PULL_HEAD_SHA: ${{ steps.pull.outputs.pull-request-head-sha }}
        RD_META__CHANGES_CATEGORIES: ${{ toJson(steps.changes-groups.outputs) }}
        RD_META__CHANGES_ALL: ${{ toJson(steps.changes-all.outputs) }}

