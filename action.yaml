name: 'RepoDynamics Init'
description: 'Initialize workflow runs.'
author: 'Armin Ariamajd'
branding:
  icon: file-text
  color: blue

inputs:

  admin-token:
    description: A personal access token with administration access to the repository.
    required: false
    default: ""
  package-build:
    required: false
    default: 'false'
    description: |
      Build the package and upload the builds as artifacts.
  package-lint:
    required: false
    default: 'false'
    description: |
      Run the linting workflow.
  package-test:
    required: false
    default: 'false'
    description: |
      Run the test workflow on package.
  website-build:
    required: false
    default: ""
    description: |
      Whether to build the website; either 'true' or 'false'.
  meta-sync:
    default: report
    required: false
    description: |
      The action to take when the dynamic files are out of sync with the repository meta content.
      Selecting 'none' will disable this action.
  hooks:
    default: report
    required: false
    description: |
      The action to take when running the workflow hooks.
      Selecting 'none' will disable this action.
  website-announcement:
    required: false
    default: ""
    description: |
      New announcement message to show on the website; 
      supports HTML syntax (don't forget to escape with \).
      Set to 'null' to remove announcement.
  website-announcement-description:
    required: false
    default: ""
    description: |
      Commit description (i.e. without type and title) 
      for the announcement commit and changelog entry.

outputs:

  config:
    description: Configurations for subsequent workflow jobs.
    value: ${{ steps.meta.outputs.config }}

  metadata-ci:
    description: Metadata for subsequent workflow jobs.
    value: ${{ steps.meta.outputs.metadata-ci }}


runs:
  using: "composite"
  steps:

    - name: 'Initialize'
      shell: bash
      run: |
        # Initialize
        printf "\n\n$(cat ${{github.action_path}}/logo.txt)\n\n\n"
        python "${{ github.action_path }}/heading.py" "1" "Checkout Repository"

    - name: 'Checkout Repository'
      uses: actions/checkout@v3
      with:
        repository: ${{ (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name) || github.repository }}
        ref: ${{ (github.event_name == 'pull_request' && github.event.pull_request.head.ref) || github.ref }}
        fetch-depth: 0

    - id: setup_env
      shell: bash
      run: |
        # Setup Environment
        python "${{ github.action_path }}/heading.py" "1" "Setup Environment"
        echo "::group::Load requirements file"
        python "${{ github.action_path }}/pathfinder.py" "${{ github.action_path }}"
        echo "::endgroup::"

    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        cache: 'pip'
        cache-dependency-path: ${{ steps.setup_env.outputs.path_requirements }}

    - shell: bash
      run: |
        # Install RepoDynamics
        python "${{ github.action_path }}/heading.py" "2" "Install RepoDynamics"
        echo "::group::Install Dependencies"
        python -m pip install -r ${{ steps.setup_env.outputs.path_requirements }}
        echo "::endgroup::"
        echo "::group::Display pip environment"
        python -m pip list
        echo "::endgroup::"

    - uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: >-
          pre-commit-3
            -${{ env.pythonLocation }}
            -${{ 
              hashFiles(
                '.github/.pre-commit-config.yaml', 
                '${{ steps.setup_env.outputs.path_requirements }}'
              ) 
            }}

#    - name: 'Detect Changes'
#      if: contains(fromJSON('["push", "pull_request"]'), github.event_name)
#      shell: bash
#      run: |
#        # Detect Changes
#        rd-print "h1" "Detect Changes"
#    - id: changes
#      if: contains(fromJSON('["push", "pull_request"]'), github.event_name)
#      uses: tj-actions/changed-files@v37
#      with:
#        files_yaml: |
#          all:
#            - '**'
#
#          discussion-template:
#            - '.github/DISCUSSION_TEMPLATE/*.yaml'
#            - '.github/DISCUSSION_TEMPLATE/*.yml'
#
#          issue-template:
#            - '.github/ISSUE_TEMPLATE/*.yaml'
#            - '.github/ISSUE_TEMPLATE/*.yml'
#
#          pull-template:
#            - '.github/PULL_REQUEST_TEMPLATE.md'
#            - '.github/PULL_REQUEST_TEMPLATE/*.yaml'
#            - '.github/PULL_REQUEST_TEMPLATE/*.yml'
#            - '.github/PULL_REQUEST_TEMPLATE/*.md'
#
#          workflow:
#            - '.github/workflows/**'
#            - '!.github/workflows/**/README.md'
#
#          github-config:
#            - '.github/*.yaml'
#            - '.github/*.yml'
#
#          data:
#            - 'data/**'
#            - '!data/**/README.md'
#
#          dev:
#            - 'dev/**'
#            - '!dev/build/conda/**'
#            - '!dev/build/pypi/**'
#            - '!dev/**/README.md'
#
#          dev-build-conda:
#            - 'dev/build/conda/**'
#            - '!dev/build/conda/**/README.md'
#
#          dev-build-pypi:
#            - 'dev/build/pypi/**'
#            - '!dev/build/pypi/**/README.md'
#
#          docs:
#            - 'docs/**'
#            - '!docs/website/**'
#            - '!docs/articles/**'
#            - '!docs/**/README.md'
#
#          docs-articles:
#            - 'docs/articles/**'
#            - '!docs/articles/**/README.md'
#
#          docs-website:
#            - 'docs/website/**'
#            - '!docs/website/**/README.md'
#
#          meta:
#            - 'meta/**'
#            - '!meta/**/README.md'
#          meta-out:
#            - 'meta/.out/**'
#            - '!meta/.out/**/README.md'
#          meta-data:
#            - 'meta/data/**'
#            - '!meta/data/**/README.md'
#          meta-media:
#            - 'meta/media/**'
#            - '!meta/media/**/README.md'
#          meta-template-health-file:
#            - 'meta/template/health_file/**'
#            - '!meta/template/health_file/**/README.md'
#          meta-template-license:
#            - 'meta/template/license/**'
#            - '!meta/template/license/**/README.md'
#          meta-template-issue-form:
#              - 'meta/template/issue_form/**'
#              - '!meta/template/issue_form/**/README.md'
#
#          src:
#            - 'src/**'
#            - '!src/**/*README.md'
#
#          tests:
#            - 'tests/**'
#            - '!**/*README.md'
#
#          setup-files:
#            - 'pyproject.toml'
#            - 'setup.py'
#            - 'MANIFEST.in'
#            - 'dev/build/pypi/readme_pypi.md'
#            - 'requirements.txt'
#
#          license:
#            - 'LICENSE'
#
#          health-files:
#            - 'CODE_OF_CONDUCT.md'
#            - 'CODEOWNERS'
#            - 'CONTRIBUTING.md'
#            - 'GOVERNANCE.md'
#            - 'SECURITY.md'
#            - 'SUPPORT.md'
#            - '.github/CODE_OF_CONDUCT.md'
#            - '.github/CODEOWNERS'
#            - '.github/CONTRIBUTING.md'
#            - '.github/GOVERNANCE.md'
#            - '.github/SECURITY.md'
#            - '.github/SUPPORT.md'
#            - 'docs/CODE_OF_CONDUCT.md'
#            - 'docs/CODEOWNERS'
#            - 'docs/CONTRIBUTING.md'
#            - 'docs/GOVERNANCE.md'
#            - 'docs/SECURITY.md'
#            - 'docs/SUPPORT.md'
#
#          readme-files:
#            - '**/*README.md'
#
#          git-files:
#            - '.gitignore'
#            - '.gitattributes'

    - name: 'Run'
      id: meta
      env:
        RD_INIT__CONTEXT: ${{ toJson(github) }}
        RD_INIT__ADMIN_TOKEN: ${{ inputs.admin-token }}
        RD_INIT__PACKAGE_BUILD: ${{ inputs.package-build }}
        RD_INIT__PACKAGE_LINT: ${{ inputs.package-lint }}
        RD_INIT__PACKAGE_TEST: ${{ inputs.package-test }}
        RD_INIT__WEBSITE_BUILD: ${{ inputs.website-build }}
        RD_INIT__META_SYNC: ${{ inputs.meta-sync }}
        RD_INIT__HOOKS: ${{ inputs.hooks }}
        RD_INIT__WEBSITE_ANNOUNCEMENT: ${{ inputs.website-announcement }}
        RD_INIT__WEBSITE_ANNOUNCEMENT_MSG: ${{ inputs.website-announcement-description }}
      shell: bash
      run: |
        # Run Action
        rd-print "h1" "Run Action"
        python -m repodynamics.actions init

#    - name: 'Pull'
#      if: steps.meta.outputs.pull == 'true'
#      id: pull
#      uses: peter-evans/create-pull-request@v5
#      # https://github.com/marketplace/actions/create-pull-request
#      with:
#        committer: 'RepoDynamics-Meta[bot] <action_meta@repodynamics.org>'
#        branch: 'maint/meta'
#        branch-suffix: timestamp
#        title: 'chore: sync dynamic files and reinforce hooks'
#        body-path: .local/temp/repodynamics/init/pr_body.md

#    - name: 'Upload Release Notes'
#      uses: actions/upload-artifact@v3
#      if: steps.meta.outputs.publish == 'true'
#      with:
#        path: .local/temp/repodynamics/release_notes.md
#        name: release_notes

#    - name: 'Create Summary'
#      id: final
#      env:
#        RD_INIT__CONTEXT: ${{ toJson(github) }}
#        RD_INIT__CHANGES: ${{ toJson(steps.changes.outputs) }}
#        RD_INIT__META: ${{ toJson(steps.meta.outputs) }}
#        RD_INIT__HOOKS: ${{ toJson(steps.hooks.outputs) }}
#        RD_INIT__PULL: ${{ toJson(steps.pull.outputs) }}
#      shell: bash
#      run: |
#        # Create Summary
#        rd-print "Finalize" heading init
#        python -m repodynamics.actions init finalize
