name: 'RepoDynamics Init'
description: 'Initialize workflow runs.'
author: 'Armin Ariamajd'
branding:
  icon: file-text
  color: blue

inputs:
  requirements-path:
    description: 'Path to the requirements file.'
    required: false
    default: '.github/workflows/requirements/repodynamics.txt'
  pre-commit-config-path:
    description: 'Path to the pre-commit configuration file.'
    required: false
    default: '.pre-commit-config.yaml'


outputs:

  meta:
    description: "Repository metadata as a JSON string."
    value: ${{ steps.metadata.outputs.meta }}

  diff:
    description: "Repository metadata diff as a JSON string."
    value: ${{ steps.metadata.outputs.diff }}

  changes-detected:
    description: "Repository metadata as a JSON string."
    value: ${{ steps.commit.outputs.changes_detected }}

  commit-hash:
    description: "Repository metadata as a JSON string."
    value: ${{ steps.commit.outputs.commit_hash }}


runs:
  using: "composite"
  steps:

    - name: 'Initialize'
      shell: bash
      run: |
        # Initialize
        printf "\n\n$(cat ${{github.action_path}}/logo.txt)\n\n\n"
        echo -e "\033[1;30;48;2;79;255;15m Initialize "

    - name: 'Checkout Repository'
      uses: actions/checkout@v3
      with:
        fetch-depth: ${{ (github.event_name == 'push' && '0') || '2' }}

    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        cache: 'pip'
        cache-dependency-path: ${{ inputs.requirements-path }}
    - shell: bash
      run: |
        # Install RepoDynamics
        echo "::group::Install Dependencies"
        python -m pip install -r ${{ inputs.requirements-path }}
        echo "::endgroup::"
        echo "::group::Display pip environment"
        python -m pip list
        echo "::endgroup::"
        rd-print "Checkout Repository" heading init

    - name: 'Detect Changes'
      if: contains(fromJSON('["push", "pull_request"]'), github.event_name)
      shell: bash
      run: |
        # Detect Changes
        rd-print "Detect Changes" heading init
    - id: changes
      if: contains(fromJSON('["push", "pull_request"]'), github.event_name)
      uses: tj-actions/changed-files@v37
      with:
        files_yaml: |
          all:
            - '**'
          
          discussion-template:
            - '.github/DISCUSSION_TEMPLATE/*.yaml'
            - '.github/DISCUSSION_TEMPLATE/*.yml'
          
          issue-template:
            - '.github/ISSUE_TEMPLATE/*.yaml'
            - '.github/ISSUE_TEMPLATE/*.yml'
          
          pull-template:
            - '.github/PULL_REQUEST_TEMPLATE.md'
            - '.github/PULL_REQUEST_TEMPLATE/*.yaml'
            - '.github/PULL_REQUEST_TEMPLATE/*.yml'
            - '.github/PULL_REQUEST_TEMPLATE/*.md'
          
          workflow:
            - '.github/workflows/**'
            - '!.github/workflows/**/README.md'
          
          github-config:
            - '.github/*.yaml'
            - '.github/*.yml'
          
          data:
            - 'data/**'
            - '!data/**/README.md'
          
          dev:
            - 'dev/**'
            - '!dev/build/conda/**'
            - '!dev/build/pypi/**'
            - '!dev/**/README.md'
          
          dev-build-conda:
            - 'dev/build/conda/**'
            - '!dev/build/conda/**/README.md'
          
          dev-build-pypi:
            - 'dev/build/pypi/**'
            - '!dev/build/pypi/**/README.md'
          
          docs:
            - 'docs/**'
            - '!docs/website/**'
            - '!docs/articles/**'
            - '!docs/**/README.md'
          
          docs-articles:
            - 'docs/articles/**'
            - '!docs/articles/**/README.md'
          
          docs-website:
            - 'docs/website/**'
            - '!docs/website/**/README.md'
          
          meta:
            - 'meta/**'
            - '!meta/**/README.md'
          meta-out:
            - 'meta/.out/**'
            - '!meta/.out/**/README.md'
          meta-data:
            - 'meta/data/**'
            - '!meta/data/**/README.md'
          meta-media:
            - 'meta/media/**'
            - '!meta/media/**/README.md'
          meta-template-health-file:
            - 'meta/template/health_file/**'
            - '!meta/template/health_file/**/README.md'
          meta-template-license:
            - 'meta/template/license/**'
            - '!meta/template/license/**/README.md'
          meta-template-issue-form:
              - 'meta/template/issue_form/**'
              - '!meta/template/issue_form/**/README.md'
          meta-extensions:
            - 'meta/extensions.json'
          
          src:
            - 'src/**'
            - '!src/**/*README.md'
          
          tests:
            - 'tests/**'
            - '!**/*README.md'
          
          setup-files:
            - 'pyproject.toml'
            - 'setup.py'
            - 'MANIFEST.in'
            - 'dev/build/pypi/readme_pypi.md'
            - 'requirements.txt'
          
          license:
            - 'LICENSE'
          
          health-files:
            - 'CODE_OF_CONDUCT.md'
            - 'CODEOWNERS'
            - 'CONTRIBUTING.md'
            - 'GOVERNANCE.md'
            - 'SECURITY.md'
            - 'SUPPORT.md'
            - '.github/CODE_OF_CONDUCT.md'
            - '.github/CODEOWNERS'
            - '.github/CONTRIBUTING.md'
            - '.github/GOVERNANCE.md'
            - '.github/SECURITY.md'
            - '.github/SUPPORT.md'
            - 'docs/CODE_OF_CONDUCT.md'
            - 'docs/CODEOWNERS'
            - 'docs/CONTRIBUTING.md'
            - 'docs/GOVERNANCE.md'
            - 'docs/SECURITY.md'
            - 'docs/SUPPORT.md'
          
          readme-files:
            - '**/*README.md'
          
          git-files:
            - '.gitignore'
            - '.gitattributes'
          
          source-files:
            - '**/*.py'
            - '**/*.ipynb'

    - name: 'Update Metadata'
      id: update-meta
      env:
        RD_INIT__CONTEXT: ${{ toJson(github) }}
        RD_INIT__META_MODIFIED: ${{ steps.changes.outputs.meta_any_modified }}
      shell: bash
      run: |
        # Determine if metadata needs to be updated
        python -m repodynamics.actions init update_meta
    - id: meta
      if: steps.update-meta.outputs.update == 'true'
      uses: repodynamics/meta@main
      with:
        commit: ${{ steps.update-meta.outputs.commit }}
        requirements-path: ${{ inputs.requirements-path }}

    - name: 'Run Hooks'
      id: run-hooks
      env:
        RD_INIT__CONTEXT: ${{ toJson(github) }}
        RD_INIT__META_COMMIT_HASH: ${{ steps.meta.outputs.commit-hash }}
      shell: bash
      run: |
          # Determine pre-commit configuration
          python -m repodynamics.actions init run_hooks
    - id: hooks
      uses: repodynamics/hooks@main
      with:
        commit: ${{ steps.run-hooks.outputs.commit }}
        from-ref: ${{ steps.run-hooks.outputs.from_ref }}
        to-ref: ${{ steps.run-hooks.outputs.to_ref }}
        config-path: ${{ inputs.pre-commit-config-path }}
        requirements-path: ${{ inputs.requirements-path }}

    - name: 'Pull'
      if: steps.hooks.outputs.pull == 'true'
      id: pull
      uses: peter-evans/create-pull-request@v5
      # https://github.com/marketplace/actions/create-pull-request
      with:
        committer: 'RepoDynamics-Meta[bot] <action_meta@repodynamics.org>'
        branch: 'maint/repodynamics'
        branch-suffix: timestamp
        title: 'maint: sync dynamic files'
        body-path: .local/temp/repodynamics/init/pr_body.md

    - name: 'Create Summary'
      id: last
      env:
        RD_INIT__CONTEXT: ${{ toJson(github) }}
        RD_INIT__CHANGES: ${{ toJson(steps.changes.outputs) }}
        RD_INIT__META: ${{ toJson(steps.meta.outputs) }}
        RD_INIT__HOOKS: ${{ toJson(steps.hooks.outputs) }}
        RD_INIT__PULL: ${{ toJson(steps.pull.outputs) }}
      shell: bash
      run: |
        # Create Summary
        echo -e "\033[1;30;48;2;200;120;255m Create Summary "
        python -m repodynamics.actions meta finalize

    - name: 'Run Context'
      uses: repodynamics/context@main
      with:
        steps: true